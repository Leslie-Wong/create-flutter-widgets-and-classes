{
  "name": "create-flutter-widgets-and-classes",
  "displayName": "Create Flutter Widgets and Classes",
  "description": "Extension that creates Flutter Stateless or Stateful Widgets, MobX Store and Classes.",
  "version": "1.2.0",
  "publisher": "ricardo-emerson",
  "repository": "https://github.com/ricardoemerson/create-flutter-widgets-and-classes",
  "icon": "images/logo.png",
  "categories": [
    "Programming Languages",
    "Other"
  ],
  "keywords": [
    "create",
    "dart",
    "flutter",
    "widget",
    "widgets",
    "component",
    "components",
    "stateless",
    "stateful",
    "screen",
    "screens",
    "class",
    "classes",
    "interface",
    "mobx",
    "getx",
    "store"
  ],
  "engines": {
    "vscode": "^1.17.0"
  },
  "activationEvents": [
    "onCommand:extension.create-stateless-widget",
    "onCommand:extension.create-stateful-widget",
    "onCommand:extension.create-class",
    "onCommand:extension.create-interface",
    "onCommand:extension.create-mobx-store",
    "workspaceContains:pubspec.yaml"
  ],
  "main": "./out/extension.js",
  "contributes": {
    "commands": [
      {
        "command": "extension.create-stateless-widget",
        "title": "üî∂ Create Flutter Stateless Widget"
      },
      {
        "command": "extension.create-stateful-widget",
        "title": "üî∑ Create Flutter Stateful Widget"
      },
      {
        "command": "extension.create-class",
        "title": "üìù Create Dart Class"
      },
      {
        "command": "extension.create-interface",
        "title": "üìÑ Create Dart Interface"
      },
      {
        "command": "extension.create-mobx-store",
        "title": "üì¶ Create MobX Store"
      },
      {
				"command": "extension.implementsInterface",
				"title": "Implements interface"
			},
      {
        "command": "extension.wrapWithExpanded",
        "title": "Wrap with Expanded"
      },
      {
        "command": "extension.wrapWithStack",
        "title": "Wrap with Stack"
      },
      {
        "command": "extension.wrapWithPositioned",
        "title": "Wrap with Positioned"
      },
      {
        "command": "extension.wrapWithClipRRect",
        "title": "Wrap with ClipRRect"
      },
      {
        "command": "extension.wrapWithHero",
        "title": "Wrap with Hero"
      },
      {
        "command": "extension.wrapWithGestureDetector",
        "title": "Wrap with GestureDetector"
      },
      {
        "command": "extension.wrapWithSingleChildScrollView",
        "title": "Wrap with SingleChildScrollView"
      },
      {
        "command": "extension.wrapWithSafeArea",
        "title": "Wrap with SafeArea"
      },
      {
        "command": "extension.wrapWithForm",
        "title": "Wrap with Form"
      },
      {
        "command": "extension.wrapWithObx",
        "title": "Wrap with Obx"
      },
      {
        "command": "extension.wrapWithObserver",
        "title": "Wrap with Observer"
      }
    ],
    "menus": {
      "explorer/context": [
        {
          "command": "extension.create-stateless-widget",
          "group": "2_modification",
          "when": "explorerResourceIsFolder"
        },
        {
          "command": "extension.create-stateful-widget",
          "group": "2_modification",
          "when": "explorerResourceIsFolder"
        },
        {
          "command": "extension.create-class",
          "group": "2_modification",
          "when": "explorerResourceIsFolder"
        },
        {
          "command": "extension.create-interface",
          "group": "2_modification",
          "when": "explorerResourceIsFolder"
        },
        {
          "command": "extension.create-mobx-store",
          "group": "2_modification",
          "when": "explorerResourceIsFolder"
        },
        {
					"command": "extension.implementsInterface",
					"when": "editorLangId == dart"
				}
      ],
      "commandPalette": [
        {
          "command": "extension.wrapWithExpanded",
          "when": "editorLangId == dart"
        },
        {
          "command": "extension.wrapWithStack",
          "when": "editorLangId == dart"
        },
        {
          "command": "extension.wrapWithPositioned",
          "when": "editorLangId == dart"
        },
        {
          "command": "extension.wrapWithClipRRect",
          "when": "editorLangId == dart"
        },
        {
          "command": "extension.wrapWithHero",
          "when": "editorLangId == dart"
        },
        {
          "command": "extension.wrapWithGestureDetector",
          "when": "editorLangId == dart"
        },
        {
          "command": "extension.wrapWithSingleChildScrollView",
          "when": "editorLangId == dart"
        },
        {
          "command": "extension.wrapWithSafeArea",
          "when": "editorLangId == dart"
        },
        {
          "command": "extension.wrapWithForm",
          "when": "editorLangId == dart"
        },
        {
          "command": "extension.wrapWithObx",
          "when": "editorLangId == dart"
        },
        {
          "command": "extension.wrapWithObserver",
          "when": "editorLangId == dart"
        }
      ]
    },
    "configuration": {
      "title": "Create Flutter Widgets and Classes",
      "properties": {
        "createFlutterWidgetsAndClasses.useIPrefixForInterfaces": {
          "type": "boolean",
          "default": true,
          "markdownDescription": "Defines whether an interface will be created using `I` with prefix to the interface name."
        }
      }
    }
  },
  "scripts": {
    "vscode:prepublish": "yarn run compile",
    "compile": "tsc -p ./",
    "watch": "tsc -watch -p ./",
    "postinstall": "node ./node_modules/vscode/bin/install",
    "test": "yarn run compile && node ./node_modules/vscode/bin/test"
  },
  "devDependencies": {
    "@types/lodash": "^4.14.168",
    "@types/node": "^12.6.8",
    "tslint": "^5.12.1",
    "typescript": "^3.3.1",
    "vscode": "^1.1.28"
  },
  "dependencies": {
    "fs": "^0.0.1-security",
    "lodash": "^4.17.21"
  }
}
