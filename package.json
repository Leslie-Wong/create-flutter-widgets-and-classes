{
  "name": "create-flutter-widgets-and-classes",
  "displayName": "Create Flutter Widgets and Classes",
  "description": "Extension that creates Flutter Stateless or Stateful Widgets, MobX Store and Classes.",
  "version": "1.1.0",
  "publisher": "ricardo-emerson",
  "repository": "https://github.com/ricardoemerson/create-flutter-widgets-and-classes",
  "icon": "images/logo.png",
  "categories": [
    "Programming Languages",
    "Other"
  ],
  "keywords": [
    "create",
    "dart",
    "flutter",
    "widget",
    "widgets",
    "component",
    "components",
    "stateless",
    "stateful",
    "screen",
    "screens",
    "class",
    "classes",
    "mobx",
    "store"
  ],
  "engines": {
    "vscode": "^1.17.0"
  },
  "activationEvents": [
    "onCommand:extension.create-stateless-widget",
    "onCommand:extension.create-stateful-widget",
    "onCommand:extension.create-class",
    "onCommand:extension.create-mobx-store",
    "workspaceContains:pubspec.yaml"
  ],
  "main": "./out/extension.js",
  "contributes": {
    "commands": [
      {
        "command": "extension.create-stateless-widget",
        "title": "ðŸ”¶ Create Flutter Stateless Widget"
      },
      {
        "command": "extension.create-stateful-widget",
        "title": "ðŸ”· Create Flutter Stateful Widget"
      },
      {
        "command": "extension.create-class",
        "title": "ðŸ“„ Create Dart Class"
      },
      {
        "command": "extension.create-mobx-store",
        "title": "ðŸ“¦ Create MobX Store"
      },
      {
        "command": "extension.wrapObserver",
        "title": "Wrap with Observer"
      },
      {
        "command": "extension.wrapStack",
        "title": "Wrap with Stack"
      },
      {
        "command": "extension.wrapExpanded",
        "title": "Wrap with Expanded"
      },
      {
        "command": "extension.wrapPositioned",
        "title": "Wrap with Positioned"
      },
      {
        "command": "extension.wrapForm",
        "title": "Wrap with Form"
      },
      {
        "command": "extension.wrapSafeArea",
        "title": "Wrap with SafeArea"
      }
    ],
    "menus": {
      "explorer/context": [
        {
          "command": "extension.create-stateless-widget",
          "group": "1_modification",
          "when": "explorerResourceIsFolder"
        },
        {
          "command": "extension.create-stateful-widget",
          "group": "1_modification",
          "when": "explorerResourceIsFolder"
        },
        {
          "command": "extension.create-class",
          "group": "1_modification",
          "when": "explorerResourceIsFolder"
        },
        {
          "command": "extension.create-mobx-store",
          "group": "1_modification",
          "when": "explorerResourceIsFolder"
        }
      ],
      "commandPalette": [
        {
          "command": "extension.wrapObserver",
          "when": "editorLangId == dart"
        },
        {
          "command": "extension.wrapStack",
          "when": "editorLangId == dart"
        },
        {
          "command": "extension.wrapExpanded",
          "when": "editorLangId == dart"
        },
        {
          "command": "extension.wrapPositioned",
          "when": "editorLangId == dart"
        },
        {
          "command": "extension.wrapForm",
          "when": "editorLangId == dart"
        },
        {
          "command": "extension.wrapSafeArea",
          "when": "editorLangId == dart"
        }
      ]
    },
    "configuration": {
      "title": "Create Flutter Widgets and Classes",
      "properties": {
        "createFlutterWidgetsAndClasses.fileNameCaseFormat": {
          "type": "string",
          "enum": [
            "snake_case",
            "PascalCase",
            "camelCase",
            "kebab-case"
          ],
          "default": "snake_case",
          "markdownDescription": "Default file case format for the name of the file."
        }
      }
    }
  },
  "scripts": {
    "vscode:prepublish": "yarn run compile",
    "compile": "tsc -p ./",
    "watch": "tsc -watch -p ./",
    "postinstall": "node ./node_modules/vscode/bin/install",
    "test": "yarn run compile && node ./node_modules/vscode/bin/test"
  },
  "devDependencies": {
    "@types/lodash": "^4.14.168",
    "@types/node": "^12.6.8",
    "tslint": "^5.12.1",
    "typescript": "^3.3.1",
    "vscode": "^1.1.28"
  },
  "dependencies": {
    "fs": "^0.0.1-security",
    "lodash": "^4.17.21"
  }
}
